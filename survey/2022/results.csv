Package Manager,PyPI,Gradle,Basalt,opam,RubyGems,npm,Go,Rust,Dart,Apache Maven,Maven Central
"What language/ecosystem is this package manager for? (i.e. golang, C, rust, etc.)",Python,JVM/Gradle plugin portal,Bash,OCaml,Ruby,JavaScript,Go,Rust,Dart,Java,"Java primarily but really any language the targets the JVM (scala, Kotlin, clojure)"
"What does your broader ecosystem look like? List of repositories, list of package managers, source control, etc.","Canonical repository is pypi.org, many third-party private repositories. Canonical package manager is pip, many third-party package managers as well. Source control is primarily GitHub.","There are largely 3 package managers (Ivy, Gradle, Maven) that mostly interoperate. There is effectively one central repository, but most organizations run their own mirror internally","The ecosystem is relatively small compared to package managers for more popular languages. There are several libraries for dealing with objects, argument parsing, parsing JSON, dealing with ANSII escapes,  and a ""core"" library for functions that help overcome limitations inherit with Bash. There are apps that range from task runners to programming language version managers (like rvm/nvm/pyenv, etc.). A full list can be found at: https://github.com/hyperupcall/awesome-basalt","GitHub Organisations: https://github.com/ocaml (includes the OCaml compiler, and the opam package manager and the primary community package repository) and https://github.com/ocaml-opam (respositories related to opam, and the repository infrastructure).

opam supports multiple package repositories, and some ecosystems maintain their own separate repositories, but the main package repository at https://github.com/ocaml/opam-repository is primary place OCaml libraries are published. Tools written in OCaml can also be published to the package repository. Submissions to opam-repository are gated only with testing to ensure package submissions do not break existing packages.

opam integrates with other package managers (principally operating system package managers - apt, dnf, brew, etc.) to install external dependencies.",RubyGems is the main mechanism for dependency distribution. Rubygems.org is the main repo. Source control is typically git.,"Large ecosystem. Multiple packages managers (yarn, pnpm). Mostly git.","According to deps.dev, there are 886K Go modules. Go is a federated ecosystem that allows package owners to host on any origin server they like; many use Github. Go packages are referenced by their package path, which is a URL like ""github.com/pkg/errors"". The ""go"" command fetches packages, builds, and tests them; by default, it fetches via our module proxy, proxy.golang.org. Our proxy accelerates downloads, improves availability, and authenticates contents using our cryptographic log at sumdb.golang.org.",,"Package manager (source code): https://github.com/dart-lang/pub
Package repository (source code): https://github.com/dart-lang/pub-dev
Package repository (website): https://pub.dev/
Package manifest documentation (website): https://dart.dev/tools/pub/pubspec","https://maven.apache.org/repositories/index.html , and other build tools reused the repositories that were created with the Maven2 format",Official repository is Maven Central (https://repo.maven.apache.org); Documentation primarily on https://central.sonatype.org; infrastructure status on https://status.maven.org
What is your name? (optional),Dustin Ingram,Sterling greene,Edwin Kofler,David Allsopp,Jacques Chester,Myles Borins,Sameer Ajmani,Jacob | Eh2406,Jonas Finnemann Jensen,Herv√© Boutemy,
What is your role for this package manager?,Maintainer,Maintainer,Maintainer,Maintainer,I am an interested third party who works with maintainers. (I'm told I am a big RubyGems friend),Maintainer,"Engineering Director, Go language team",Maintainer,Maintainer,Maintainer,Engineering Manager for Sonatype's Maven Central team
Is there a way for developers to sign their packages?,"Yes, using developer own keys","Yes, using developer own keys","No, but interested in exploring","Yes, other (fill in below), Package signing via Conex (which is based TUF) is available, but is not deployed on the main repository (yet).","Yes, using developer own keys","No, but planned","Yes, other (fill in below), See https://transparency.dev/application/add-tamper-checking-to-a-package-manager/","No, but interested in exploring","No, but interested in exploring","Yes, using developer own keys","Yes, using developer own keys"
Is there an ability to verify signature data offline?,Yes,Yes,"No, but interested in exploring",Yes,Yes,"No, but planned",Yes,"No, but interested in exploring","No, but interested in exploring",Yes,Yes
"Is so, what are supported signature types?",PGP,PGP,,RSA-PSS-SHA256,x509 certs,fulcio/sigstore,See https://transparency.dev/application/add-tamper-checking-to-a-package-manager/,,,PGP,PGP
Is there support for reproducible builds and build systems?,"No, but interested in exploring","Yes, optional","No, and no plans on implementing","Yes, optional","Yes, optional","No, but interested in exploring","Yes, optional","Yes, optional","No, but interested in exploring","Yes, optional","Yes, mandatory"
Is there a way to prevent typosquatting?,"No, but interested in exploring","Yes, using DNS based package names, Before ~2018, we did not try to prevent typosquatting or dependency confusion.","No, and no plans on implementing","No, but interested in exploring, No plans at this time - repository is manually curated at present","RubyGems does not have inbuilt typosquatting protection, but the rubygems.org repo has some typosquatting detection","Yes, partially for official / popular packages",Not relevant - we are a pull proxy and everything is DNS based. We don't manage a namespace.,"No, but part of Terms of Service","Yes, other (fill in below), We have a few rules to prevent similar package names, though these probably have some flaws.","Yes, using DNS based package names","Yes, using DNS based package names"
Is namespacing or packages so that an entire namespace be managed by an organization allowed?,"No, but planned","Yes, other (fill in below), Not an organization, but only a single account is allowed to publish to a namespace","Yes, other (fill in below), Yes, through GitHub organizations or user-accounts. All packages are published this way.","No, but interested in exploring","No, but interested in exploring","Yes, but it is optional","Yes, implicitly through DNS/Source Control","No, but planned","No, and no plans on implementing","Yes, implicitly through DNS/Source Control","Yes, and enforced"
Is DNS verification proof required when reserving or exercising a domain/namespace or domain name attribute of a package?,"No, and no plans on implementing",Yes,"No, and no plans on implementing","No, and no plans on implementing","No, and no plans on implementing","No, and no plans on implementing",N/A,"No, but planned",Yes,Yes,Yes
Are there mechanisms to prevent mis-spelled package names?,"Yes, restricted or canonicalized character set (i.e. '-' and '_' do not distinguish packages), Yes, manual review","Yes, manual review","No, but interested in exploring","No, but interested in exploring","Yes, other (fill in below), ""Did you mean?"", using Levenshtein distance","Yes, check minimum edit distance between names",N/A- we are a pull proxy and everything is DNS based. We don't manage a namespace.,"Yes, restricted or canonicalized character set (i.e. '-' and '_' do not distinguish packages)","Yes, restricted or canonicalized character set (i.e. '-' and '_' do not distinguish packages), on pub.dev users can register a ""publisher"" which must have a verified domain name. This is not a namespace though.","No, and no plans on implementing","No, and no plans on implementing"
Is there a way to protect against reserving a package name of a previously deleted package?,"No, but planned","Yes, deletions not allowed","No, but interested in exploring","No, but interested in exploring, Packages are at present not deleted from opam-repository, but only marked as unavailable (so the name remains)","No, but interested in exploring","Yes, other (fill in below), Active packages cannot be deleted. Packages removed for malware have holding packages squatting the name. All other packages become available after 28 days",N/A- we are a pull proxy and everything is DNS based. We don't manage a namespace.,"Yes, deletions not allowed","Yes, deletions are staggered and point to an error for a reasonable amount of time before being removed, Yes, other (fill in below), we do not allow reuse of package names when a package is deleted. Special cases can be permitted, but are subject to manual review.",not at Maven level,"Yes, deletions not allowed"
Are you protected from dependency confusion attacks? (For example: https://dhiyaneshgeek.github.io/web/security/2021/09/04/dependency-confusion/),"Yes, other (fill in below), Yes, via hash checking mode.","Yes, via fully qualified package name/DNS and strict resolution rules","Yes, other (fill in below), Yes, through GitHub organizations or user-accounts. Since package names / URIs must include the name of the GitHub organization, there is no confusion possible.","No, but interested in exploring","Yes, other (fill in below), Bundler lockfiles are subdivided by ""source"" (eg HTTPS, git, path, S3 etc)","Yes, other (fill in below), Through namespaces we somewhat protect against this, but there are still footguns","Yes, via fully qualified package name/DNS and strict resolution rules",Each package lists which registry it's supposed to come from. The same name from a different registry is not the same package.,"Yes, other (fill in below), We have strict resolution rules without fall-backs. However, enterprise using writing their own package repository or using jFrog/cloudsmith may proxy packages from pub.dev and could create confusion attacks for themselves. In the local cache of packages stored on the users machines we always use a folder that is fully qualified.","Yes, via fully qualified package name/DNS and strict resolution rules","Yes, via fully qualified package name/DNS and strict resolution rules"
Are there checks against public leaked credential compromise databases to identify potentially compromised user accounts?,Yes,"No, and no plans on implementing","No, and no plans on implementing","No, but planned",Yes,"No, but interested in exploring",N/A- we are a pull proxy and everything is DNS based. We don't manage a namespace.,"No, but planned","No, and no plans on implementing","No, and no plans on implementing","No, but interested in exploring"
"If so, what are some databases used?","HIBP, GitHub token scanning integration",,,,Haveibeenpwned,We check for leaked password and scan for credentials being published but don't actively check existing accounts,N/A,Github,,,
Are there mechanisms in place to protect against key attacks and replay attacks?,"No, but planned","No, but interested in exploring","No, and no plans on implementing","Yes, via TUF, Support is implemented but not deployed on the main package repository","No, but interested in exploring","No, but interested in exploring",N/A- we are a pull proxy and everything is DNS based. We don't manage a namespace.,"No, but planned","No, but interested in exploring","No, and no plans on implementing","No, and no plans on implementing"
Do you provide the ability to remove a release in a scenario when it is detected to contain malware?,Yes,"Yes, with caveats (fill in below), Maintainers can delete release up to 7 days, admins can delete any release","No, and no plans on implementing",Yes,"Yes, with caveats (fill in below), Manually, when reported (and we find they are malicious, vs say researcher gems). We have some autodetection provided Diffend.","Yes, with caveats (fill in below), We takedown packages with malware but publish a holding package in it's place",Yes,Yes,"Yes, with caveats (fill in below), Package removal is always a manual process that involves contacting support@pub.dev",not done at Maven level,Yes
Is there a way for consumers of packages to flag a package as malicious?,Yes,"No, and no plans on implementing","No, but interested in exploring",Yes,Yes,Yes,Yes,Yes,"No, but interested in exploring","No, and no plans on implementing","No, but interested in exploring"
Is there a mechanism to notify maintainers that a release contains malware or has been detected to be compromised?,"No, but planned","No, and no plans on implementing","No, but interested in exploring","No, but interested in exploring",Yes,"No, but interested in exploring",Yes,"No, but planned","No, but interested in exploring",Yes,Yes
Is there a way to ensure that installing and building code doesn't allow execution of arbitrary code on the host in an unprotected way?,"No, but interested in exploring","No, and no plans on implementing",Yes,Yes,"No, and no plans on implementing","No, but planned",Yes,"No, and no plans on implementing","No, but interested in exploring",Yes,Yes
Does your ecosystem perform any security testing against its code and/or infrastructure?,"No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but planned","Yes, package manager SERVICE/SERVER clearbox (a.k.a whitebox) testing, Yes, package manager CLIENT clearbox (a.k.a whitebox) testing","No, but planned","No, but interested in exploring","No, but interested in exploring","Yes, package manager SERVICE/SERVER pentest (a.k.a blackbox) testing, Yes, the ORGANIZATION hosting the package manager SERVER has had an external red team engagement"
"If so, please link to any public reports",,,,,,This is not entirely accurate but I can't publicly discuss the work we are doing right now,,,,,
Is there a security testing schedule in place? ,"No, but interested in exploring","No, and no plans on implementing","No, and no plans on implementing","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, and no plans on implementing","No, but interested in exploring",1 year frequency
Does the package manager have an unrestricted (no NDA) vulnerability disclosure program/policy? (for example: https://github.com/gradle/.github/blob/master/SECURITY.md),Yes,Yes,"No, but interested in exploring","No, but interested in exploring",Yes,Yes,Yes,Yes,Yes,Yes,"No, but interested in exploring"
"If so, please link to it",https://pypi.org/security/,,,,https://hackerone.com/rubygems?type=team,https://hackerone.com/github,https://go.dev/security/vuln/,https://www.rust-lang.org/policies/security and https://github.com/RustSec/advisory-db/blob/main/CONTRIBUTING.md,"https://pub.dev/security
https://www.google.com/appserve/security-bugs/m2/new?rl=&key=
https://about.google/appsecurity/

I don't think an NDA is required, but I could be wrong.",https://www.apache.org/security/ (we use the generic Apache one),
"Do tooling binaries, (i.e. npm, go, mvn), used in the ecosystem have additional supply chain security or guarantees in place (turtles all the way down question)?","No, but interested in exploring","No, but interested in exploring","No, and no plans on implementing","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring",Yes,"No, and no plans on implementing","No, but planned","No, but interested in exploring","No, but interested in exploring"
"If so, what are some extra protections to protect the tooling binaries produced? And what is being planned?",,,,,n/a,,https://docs.google.com/document/d/1boME0sOejewx1CNEXLv2jUBp6_MxuDSveukcQysKXxA/edit,,"""pub"" is shipped along side the Dart SDK, there is an ongoing process to implement SLSA compliance. Such as locking down all aspects of the release pipeline, and having reviews on all code changes.",,
Is there a way to provide the means to create minimally-scoped access/API tokens as an alternative to account-wide authentication & authorization?,Yes,"No, and no plans on implementing",Not Applicable,Not Applicable,Yes,"No, but planned",Not Applicable,"No, but planned","No, but planned",Not Applicable,"No, but planned"
"If not applicable, explain why.",,,GitHub is used to host all the packages - any authentication and authorization account changes is done through their interface.,Package manager is only responsible for pulling packages - publication is external to the ecosystem.,,We are shipping Granular Access tokens in a beta next quarter,No - everything is DNS based. We don't manage a namespace.,,,Maven CLI tool,
"When publishing in a non-interactive environment that cannot support 2FA, are minmally scoped tokens instead of broad authentication required?","No, but planned","No, and no plans on implementing","No, but interested in exploring",Not Applicable,Yes,"No, but planned",Not Applicable,"No, and no plans on implementing","No, but planned",Not Applicable,"No, but planned"
"If not applicable, explain why.",,,,Package manager is only responsible for pulling packages - publication is external to the ecosystem.,,We are shipping Granular Access tokens in a beta next quarter,No - everything is DNS based. We don't manage a namespace.,,,,
Is there a way to set token expiry time or enforce a credential rotation?,"No, but planned","No, but interested in exploring","No, and no plans on implementing",Not Applicable,"No, but planned","No, but planned",Not Applicable,"No, but interested in exploring","No, but planned",Not Applicable,"No, but planned"
What mechanisms are in place for account recovery to ensure that the account cannot be falsly recovered by a malicious actor?,"Yes, using Github to verify, Yes, others (fill in below), Email verification in addition to source repository verification","No, but interested in exploring, Yes, using Github to verify, We have local accounts and GH sign-ins ",Not Applicable,Package manager is only responsible for pulling packages - publication is external to the ecosystem.,"Yes, using Github to verify, Yes, others (fill in below), Just for MFA: Open a github issue under same known identity. Then we send an email reset link. For non-MFA accounts the reset is self-service.","Yes, others (fill in below), We have an extensive recovery program that utilizes multiple means of identity verification",N/A- we are a pull proxy and everything is DNS based. We don't manage a namespace.,"Yes, using Github to verify","Yes, others (fill in below), We use google accounts, which have various flows to protect against account hijacking.",Not Applicable,"Yes, others (fill in below), Confirmation of identity from already verified users; fallback to providing domain ownership via DNS"
Is there support for multi-factor authentication?,"Yes, via Security Key, Yes, other (fill in below), via TOTP","No, and no plans on implementing","No, and no plans on implementing",Package manager is only responsible for pulling packages - publication is external to the ecosystem.,"Yes, via TOTP (Time-based one-time password)","Yes, via TOTP (Time-based one-time password), Yes, via 2FA via IdentityProvider (i.e. github/google/microsoft, etc.), Yes, via Security Key",No - we don't use auth because we are a pull proxy and everything is DNS based. We don't manage a namespace.,"Yes, via 2FA via IdentityProvider (i.e. github/google/microsoft, etc.)","Yes, via SMS, Yes, via TOTP (Time-based one-time password), Yes, via 2FA via IdentityProvider (i.e. github/google/microsoft, etc.), Yes, via Security Key, Yes, other (fill in below), Authentication is always done through Google OAuth.",not really Maven scope,"No, but planned"
Is multi-factor authentication enforced?,"Yes, for restricted users","No, and no plans on implementing","No, and no plans on implementing",Package manager is only responsible for pulling packages - publication is external to the ecosystem.,"Yes, for restricted users","Yes, for restricted users",No - we don't use auth because we are a pull proxy and everything is DNS based. We don't manage a namespace.,"No, but interested in exploring","No, and no plans on implementing",not really Maven scope,"No, but planned"
"For accounts without 2FA, do you require email verification on login?","No, and no plans on implementing",Yes,"No, and no plans on implementing","No, but interested in exploring","No, and no plans on implementing",Yes,No - we don't use auth because we are a pull proxy and everything is DNS based. We don't manage a namespace.,"No, but interested in exploring","No, and no plans on implementing","No, and no plans on implementing","No, but planned"
"In consuming dependencies, is there a policy that can be defined on which keys/signatures/hashes to trust?","Yes, policy on hashes","Yes, policy on hashes, Yes, policy on keys/signatures","No, but interested in exploring","No, but interested in exploring","Yes, policy on keys/signatures",We sign packages and shasums are stored in a package-lock. Shasums are verified on install,"Yes, policy on keys/signatures","No, and no plans on implementing","No, but interested in exploring","Yes, policy on hashes, Yes, policy on keys/signatures, Yes, but not natively (fill in below), pgpverify-maven-plugin","No, but interested in exploring"
"In consuming dependencies, is there a policy that can be defined to check for known vulnerabilities?","Yes, but not natively (fill in below), Via https://pypi.org/p/pip-audit or other third-party tools","No, but interested in exploring","No, and no plans on implementing","No, but planned","Yes, but not natively (fill in below), Bundler audit plugin: https://github.com/rubysec/bundler-audit",Yes,Yes,"Yes, but not natively (fill in below)","No, but planned","Yes, but not natively (fill in below), plugins from many different vendors","No, but interested in exploring"
"In consuming dependencies, is there a policy that can be defined to check for 3rd party audits and attestations?","No, but interested in exploring","No, but interested in exploring","No, and no plans on implementing","No, but interested in exploring","No, but interested in exploring","No, but planned","No, but interested in exploring","Yes, but not natively (fill in below)","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring"
Is there support for generating SBOM for packages and to make them accessible?,"Yes, but not natively (fill in below), Via https://pypi.org/p/pip-audit or other third-party tools","Yes, but not natively (fill in below), third party plugin provides this","No, but planned","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring",Yes,"No, but interested in exploring","No, but interested in exploring","Yes, but not natively (fill in below)","No, but planned"
What information does the SBOM generated or metadata include?,Source,third party plugin provides this,"Source, Build information, License Information, *Planned information",Not yet generated!,n/a,Still exploring,"Source, Build information",N/A,no SBOM yet,"Source, Output Binary Information, License Information","Build information, Output Binary Information, License Information"
What formats of SBOMs are available?,"SPDX Planned, CycloneDX Implemented",third party plugin provides this,"SPDX Planned, CycloneDX Planned",Not yet generated!,n/a,N/A,https://go.dev/doc/go1.18#debug/buildinfo,SPDX Planned,no SBOM yet,"SPDX Implemented, CycloneDX Implemented","SPDX Planned, CycloneDX Planned"
"Is there a mechanism provided to pin dependencies to be immutably verified? (i.e. pinning to hashes / lock file, etc.)",Yes,Yes,"No, and no plans on implementing",Yes,"No, but interested in exploring",Yes,Yes,Yes,"No, but planned","Yes, other (fill in below), dependencyManagement",Yes
Is fuzzing services or utilities available?,"No, but interested in exploring","No, and no plans on implementing","No, and no plans on implementing",Yes,"No, and no plans on implementing","No, but interested in exploring",Yes,Yes,"No, and no plans on implementing","No, and no plans on implementing","No, but interested in exploring"
What fuzzers are used/available?,,,,AFL,n/a,,https://go.dev/security/fuzz/,"afl.rs, cargo-fuzz, honggfuzz, and many more",,,
"Are there SAST/DAST services or utilities available to detect bad code patterns (i.e. use after free, etc.)","No, but interested in exploring",Yes,"No, but planned","No, but interested in exploring","No, and no plans on implementing",,Yes,Yes,"No, but interested in exploring",,"No, but interested in exploring"
What SAST/DAST services are used/available?,,"Checkstyle, PMD, CodeNarc, other static analysis tools are provided by a third party",ShellCheck is the predominant SAST Bash code checker. A better SAST needs to be created with Basalt in mind.,,n/a,,https://pkg.go.dev/cmd/vet,"The Compiler bock most of these, But there is also Clippy ",,,
Are there services and tools that help the developer keep their code and packages in good shape? By suggesting changes/fixes - i.e. dependabot equivalent for package ecosystem,"No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","Some minimal validation of gemspec at build time, rubygems.org can reject invalid gemspecs. But this only covers metadata.","No, but interested in exploring, Not officially supported but there are third party services in the ecosystem to do this","No, but interested in exploring","No, but interested in exploring","Yes, we have scoring of packages on pub.dev",,"No, but interested in exploring"
What are some of these services?,,,,,See previous answer,,,,,,
Is there a way to score dependencies based on their hygiene or security posture?,"No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, but interested in exploring","No, and no plans on implementing",Not officially supported but there are third party services in the ecosystem to do this,Not officially supported but there are third party services in the ecosystem to do this,"No, but interested in exploring","No, but interested in exploring",,"No, but interested in exploring"
What are some of these services?,,,,,n/a,,"deps.dev provides OpenSSF scorecards for Go packages, and pkg.go.dev links to it",,,,